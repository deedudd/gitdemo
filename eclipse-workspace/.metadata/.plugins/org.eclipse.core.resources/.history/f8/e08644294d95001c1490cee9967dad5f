package maven.project;

import java.io.File;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.CapabilityType;
import org.testng.annotations.Test;

public class SslCertificatiion {
	WebDriver driver;

	@Test
	public void certf() {

		ChromeOptions options = new ChromeOptions();
		options.setCapability(CapabilityType.ACCEPT_INSECURE_CERTS, true);

		System.setProperty("webdriver.chrome.driver", "D:\\chromedriver.exe"); 
		driver = new ChromeDriver(options); 
		driver.get("https://expired.badssl.com");
		System.out.println(driver.getTitle());
	}
	@Test
	public void screenshot() throws IOException {
		File src = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
		FileUtils.copyFile(src, new File("C:\\Users\\deepi\\Desktop\\screenshot.png"));
	}
	
	@Test
	public void brokenLinks() throws MalformedURLException, IOException {
		driver.get("https://rahulshettyacademy.com/AutomationPractice/");
		String link = driver.findElement(By.xpath("//a[contains(text(),'Broken Link')]")).getAttribute("href");
		HttpURLConnection conn = (HttpURLConnection)new URL(link).openConnection();
		conn.setRequestMethod("HEAD");
		conn.connect();
		int respCode = conn.getResponseCode();
		if(respCode>400)
		{
			System.out.println("This link is a brokenLink"+link);
			
		}
	}
}
